// <auto-generated />
using System;
using EntityFrameworkPractice;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EntityFrameworkPractice.Migrations
{
    [DbContext(typeof(MedicineDbContext))]
    [Migration("20220202152944_AddDispansaryTable")]
    partial class AddDispansaryTable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("DispansaryMedicinInfo", b =>
                {
                    b.Property<int>("MedicinInfoID")
                        .HasColumnType("int");

                    b.Property<int>("PharmecyID")
                        .HasColumnType("int");

                    b.HasKey("MedicinInfoID", "PharmecyID");

                    b.HasIndex("PharmecyID");

                    b.ToTable("DispansaryMedicinInfo");
                });

            modelBuilder.Entity("EntityFrameworkPractice.Dispansary", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Dispansary");
                });

            modelBuilder.Entity("EntityFrameworkPractice.MedicinInfo", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("MedicineName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Price")
                        .HasColumnType("int");

                    b.Property<DateTime>("PurchaseDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.ToTable("MedicinInfo");
                });

            modelBuilder.Entity("DispansaryMedicinInfo", b =>
                {
                    b.HasOne("EntityFrameworkPractice.MedicinInfo", null)
                        .WithMany()
                        .HasForeignKey("MedicinInfoID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EntityFrameworkPractice.Dispansary", null)
                        .WithMany()
                        .HasForeignKey("PharmecyID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
